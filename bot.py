from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto
from aiogram.utils import executor

API_TOKEN = "7809731825:AAHZG_deIAVIVfbvHZ_LeS8yYb7SiorUDxI"  # ‚¨ÖÔ∏è –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# üîπ –¢–æ–≤–∞—Ä—ã (–º–æ–∂–µ—à—å –º–µ–Ω—è—Ç—å, –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏)
items = {
    
    "bottle": {
        "title": "üíß –ë—É—Ç—ã–ª–∫–∞ Gatorade",
        "photo": "https://shopgatorade.com.au/cdn/shop/files/Gatorade_ECOM6953.png",
        "desc": "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –±—É—Ç—ã–ª–∫–∞ Gatorade, –ø–æ—á—Ç–∏ –Ω–æ–≤–∞—è",
        "price": "1500‚ÇΩ",
        "buy_link": "https://t.me/dmrxw73"
    }
}

# üì¶ –ú–µ–Ω—é —Å —Ç–æ–≤–∞—Ä–∞–º–∏
async def show_menu(message_or_callback):
    kb = InlineKeyboardMarkup(row_width=1)
    for key, item in items.items():
        kb.add(InlineKeyboardButton(text=item["title"], callback_data=f"item_{key}"))
    text = "üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>FromDomBot</b>!\n\n–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ üëá"

    if isinstance(message_or_callback, types.Message):
        await message_or_callback.answer(text, reply_markup=kb, parse_mode="HTML")
    else:
        await message_or_callback.message.edit_caption(text, reply_markup=kb, parse_mode="HTML")
        await message_or_callback.answer()

# üîò –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await show_menu(message)

# üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä
@dp.callback_query_handler(lambda c: c.data.startswith("item_"))
async def show_item(callback: types.CallbackQuery):
    key = callback.data.split("_")[1]
    item = items.get(key)

    if not item:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    kb = InlineKeyboardMarkup(row_width=1)
    kb.add(
        InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É", url=item["buy_link"]),
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–∞—Ç–∞–ª–æ–≥", callback_data="back_to_menu")
    )

    caption = f"<b>{item['title']}</b>\n\n{item['desc']}\n\nüí∞ –¶–µ–Ω–∞: <b>{item['price']}</b>"

    await callback.message.edit_media(
        InputMediaPhoto(media=item["photo"], caption=caption, parse_mode="HTML"),
        reply_markup=kb
    )
    await callback.answer()

# üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
@dp.callback_query_handler(lambda c: c.data == "back_to_menu")
async def back_to_menu(callback: types.CallbackQuery):
    await show_menu(callback)

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    
    executor.start_polling(dp, skip_updates=True)
